信号量用法通俗解释（摘自知乎-灵剑）
链接：https://www.zhihu.com/question/47411729/answer/105848845
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
信号量就是在一个叫做互斥区的门口放一个盒子，盒子里面装着固定数量的小球，每个线程过来的时候，都从盒子里面摸走一个小球，然后去互斥区里面浪（？），浪开心了出来的时候，再把小球放回盒子里。如果一个线程走过来一摸盒子，得，一个球都没了，不拿球不让进啊，那就只能站在门口等一个线程出来放回来一个球，再进去。这样由于小球的数量是固定的，那么互斥区里面的最大线程数量就是固定的，不会出现一下进去太多线程把互斥区给挤爆了的情况。这是用信号量做并发量限制。另外一些情况下，小球是一次性的，线程拿走一个进了门，就把小球扔掉了，这样用着用着小球就没了，不过有另外一些线程（一般叫做生产者）会时不时过来往盒子里再放几个球，这样就可以有新的线程（一般叫做消费者）进去了，放一个球进一个线程，这是信号量做同步功能。你截图里的例子就是这个情况，主线程是生产者，通过sem_post往盒子里放小球（信号量加一），而其他线程是消费者，通过sem_wait从盒子里拿小球（信号量减一），如果遇到盒子里一个小球都没有（信号量为0），就会开始等待信号量不为0，然后拿走一个小球（信号量减一）再继续。本质上来说信号量就是那个盒子，以及“摸不到球就不让进”这个机制。顺便你这个例子其实有点问题，发送信号量也就是放小球的这个过程并不会阻塞，会继续执行下去，那么有可能在消费者线程取走work_area里面的数据之前，下一个fgets就把这个数据覆盖了，这是个很危险的竞争冒险的问题，非常不符合多线程程序的设计准则。由于是从stdin当中读取数据，一般来说键盘是没有这么快，但要知道完全可以把输入重定向到文件，这时候就很容易出问题了。