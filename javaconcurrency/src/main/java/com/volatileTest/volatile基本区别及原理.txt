为什么要使用volatile？
    在当前的Java内存模型下，线程可以把变量保存在本地内存（比如机器的寄存器）中，而不是直接在主存中进行读写。这就可能造成一个线程在主存中修改了一个变量的值，而另外一个线程还继续使用它在寄存器中的变量值的拷贝，造成数据的不一致。
    要解决这个问题，只需要像在本程序中的这样，把该变量声明为volatile（不稳定的）即可，这就指示JVM，这个变量是不稳定的，每次使用它都到主存中进行读取。
    一般说来，多任务环境下各任务间共享的标志都应该加volatile修饰。

Volatile成员变量的特点？
    被volatile修饰的变量，每次被线程访问的时候，都会从共享内存中重读该成员变量的值，并且在成员变量发生变化的时候，都会将变化值写回到共享内存，这样的结果在任何时刻，两个不同的线程总是能读到成员变量的同一个值。
    可以说，volatile主要维护了并发编程中的可见性问题。

