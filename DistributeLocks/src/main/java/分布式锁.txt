什么是分布式锁？
    目前很多大型网站和应用都是分布式部署的，分布式场景中数据一致性是一个重要话题，基于CAP理论，任何一个分布式系统都无法同时满足一致性、可用性、分区容错性，最多同事满足其中两项。所以在设计之初需要对三者做出取舍，在互联网领域，绝大多数场景中，需要系统强一致性换取系统高可用性，需要在最终阶段保证数据一致性，也就是“最终一致性”，只要这个最终时间是用户可接受范围内既可。
    为了保证数据的最终一致性，需要使用很多技术方案来支持，比如分布式事务，分布式锁等。有的时候，需要保证一个方法在同一个时间内只能被同一个线程执行。在单机环境当中，Java的并发包中提供了相关API进行处理，但是这些API在分布式场景当中就无能为力。所以要实现分布式锁要使用其他的方案。

对于分布式锁的实现方案有哪些？
    1.基于数据库实现的分布式锁。
    2.基于缓存实现的分布式锁。
    3.基于Zookeeper实现的分布式锁。

分布式锁的基本需求（以方法所为例子）：
    1.可以保证在分布式部署的应用集群中，使得同一方法在同一时间只能被一台机器上的一个线程执行。
    2.这把锁需要是一把可重入锁（避免死锁）。
    3.有高可用的获取锁和释放锁的功能。
    4.获取锁释放锁性能要好。
    5.该锁是可阻塞的。

